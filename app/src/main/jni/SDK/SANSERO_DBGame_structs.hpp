#pragma once

// Pubg Mobile Battelgrounds (2.9.0) SDK Generated By @hhamk2 
// ùöÉùöéùöïùöéùöêùöõùöäùöñ -: @SANSERO_MOD_1
namespace SDK
{
//---------------------------------------------------------------------------
//Enums
//---------------------------------------------------------------------------

// Enum DBGame.EDBZCameraDataType
enum class EDBZCameraDataType : uint8_t
{
	ECameraDataType_DBZ_Sprint     = 0,
	ECameraDataType_DBZ_Aim        = 1,
	ECameraDataType_DBZ_Fly        = 2,
	ECameraDataType_DBZ_Save       = 3,
	ECameraDataType_DBZ_Fire       = 4,
	ECameraDataType_DBZ_MAX        = 5
};


// Enum DBGame.EDBZDestroyType
enum class EDBZDestroyType : uint8_t
{
	EDBZDestroyType__ImpactNone    = 0,
	EDBZDestroyType__ImpactCharacter = 1,
	EDBZDestroyType__ImpactObject  = 2,
	EDBZDestroyType__OutRange      = 3,
	EDBZDestroyType__OutOfTime     = 4,
	EDBZDestroyType__EDBZDestroyType_MAX = 5
};


// Enum DBGame.EDBZBulletPreCollosionType
enum class EDBZBulletPreCollosionType : uint8_t
{
	EDBZBulletPreCollosionType__BR_BASE = 0,
	EDBZBulletPreCollosionType__DBZ_PROJECTILE1 = 1,
	EDBZBulletPreCollosionType__DBZ_PROJECTILE2 = 2,
	EDBZBulletPreCollosionType__DBZ_LASER1 = 3,
	EDBZBulletPreCollosionType__DBZ_LASER2 = 4,
	EDBZBulletPreCollosionType__DBZ_LINER1 = 5,
	EDBZBulletPreCollosionType__DBZ_LINER2 = 6,
	EDBZBulletPreCollosionType__None = 7,
	EDBZBulletPreCollosionType__EDBZBulletPreCollosionType_MAX = 8
};


// Enum DBGame.EAttackMontageType
enum class EAttackMontageType : uint8_t
{
	EAttackMontageType__ENone      = 0,
	EAttackMontageType__EGroundAttack = 1,
	EAttackMontageType__EFlyAttack = 2,
	EAttackMontageType__EAttackMontageType_MAX = 3
};


// Enum DBGame.EDBZProjectileFlyDirectionType
enum class EDBZProjectileFlyDirectionType : uint8_t
{
	EDBZProjectileFlyDirectionType__UseOwnerDirection = 0,
	EDBZProjectileFlyDirectionType__UseAutoTargetDirection = 1,
	EDBZProjectileFlyDirectionType__UseBlackboardDirection = 2,
	EDBZProjectileFlyDirectionType__EDBZProjectileFlyDirectionType_MAX = 3
};


// Enum DBGame.EDBZProjectileInitLocationType
enum class EDBZProjectileInitLocationType : uint8_t
{
	EDBZProjectileInitLocationType__UseOwnerLocation = 0,
	EDBZProjectileInitLocationType__UseSocketLocation = 1,
	EDBZProjectileInitLocationType__UseBlackboardLocation = 2,
	EDBZProjectileInitLocationType__EDBZProjectileInitLocationType_MAX = 3
};


// Enum DBGame.EAnimMontageTypeAndPostureDBZ
enum class EAnimMontageTypeAndPostureDBZ : uint8_t
{
	EAnimMontageTypeAndPostureDBZ__TPS_Stand = 0,
	EAnimMontageTypeAndPostureDBZ__TPS_Crouch = 1,
	EAnimMontageTypeAndPostureDBZ__TPS_Jump = 2,
	EAnimMontageTypeAndPostureDBZ__TPS_Fly = 3,
	EAnimMontageTypeAndPostureDBZ__TPS_Max = 4
};



//---------------------------------------------------------------------------
//Script Structs
//---------------------------------------------------------------------------

// ScriptStruct DBGame.NetArrayUnitDBZ
// 0x0058
struct FNetArrayUnitDBZ
{
	struct FNetArrayUnit                               NetArrayUnit;                                             // 0x0000(0x0050)
	int                                                Index;                                                    // 0x0050(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0054(0x0004) MISSED OFFSET
};

// ScriptStruct DBGame.IncNetArrayDBZ
// 0x0020
struct FIncNetArrayDBZ
{
	TArray<struct FNetArrayUnitDBZ>                    IncArray;                                                 // 0x0000(0x0010) (ZeroConstructor)
	unsigned char                                      UnknownData00[0x10];                                      // 0x0010(0x0010) MISSED OFFSET
};

// ScriptStruct DBGame.CharacterParticleEffect
// 0x0148
struct FCharacterParticleEffect
{
	struct FName                                       CharacterEffectName;                                      // 0x0000(0x0008) (Edit, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	unsigned char                                      UnknownData00[0x28];                                      // 0x0008(0x0028) UNKNOWN PROPERTY: SoftObjectProperty DBGame.CharacterParticleEffect.DefaultParticleTemplate
	unsigned char                                      UnknownData01[0x50];                                      // 0x0030(0x0050) UNKNOWN PROPERTY: MapProperty DBGame.CharacterParticleEffect.HeroParticleTemplateMap
	TArray<struct FName>                               AttachedSockets;                                          // 0x0080(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<EPawnState>                                 ActivedState;                                             // 0x0090(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<struct FName>                               ExcludeAnimCurveName;                                     // 0x00A0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<EPawnState>                                 ExcludeStates;                                            // 0x00B0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	TArray<TEnumAsByte<EMovementMode>>                 ExcludeMovementMode;                                      // 0x00C0(0x0010) (Edit, ZeroConstructor, DisableEditOnInstance)
	unsigned char                                      UnknownData02[0x28];                                      // 0x00D0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty DBGame.CharacterParticleEffect.UsingParticleTemplate
	TMap<struct FName, class UParticleSystemComponent*> RuntimeCachedParticleEffects;                             // 0x00F8(0x0050) (ExportObject, ZeroConstructor, Transient)
};

// ScriptStruct DBGame.DynamicScaleData
// 0x0008
struct FDynamicScaleData
{
	float                                              DynamicScaleTime;                                         // 0x0000(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
	float                                              DynamicScaleRate;                                         // 0x0004(0x0004) (BlueprintVisible, BlueprintReadOnly, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct DBGame.WeaponModifyData
// 0x0018
struct FWeaponModifyData
{
	struct FString                                     ModifyString;                                             // 0x0000(0x0010) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance)
	float                                              DurationTime;                                             // 0x0010(0x0004) (Edit, BlueprintVisible, BlueprintReadOnly, ZeroConstructor, DisableEditOnInstance, IsPlainOldData)
	float                                              EnterTime;                                                // 0x0014(0x0004) (ZeroConstructor, Transient, IsPlainOldData)
};

// ScriptStruct DBGame.WeaponCameraInfo
// 0x0018
struct FWeaponCameraInfo
{
	struct FVector                                     AimDir;                                                   // 0x0000(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
	struct FVector                                     Loc;                                                      // 0x000C(0x000C) (Edit, BlueprintVisible, DisableEditOnInstance, IsPlainOldData)
};

// ScriptStruct DBGame.RaySegmentedSoundEffect
// 0x0078
struct FRaySegmentedSoundEffect
{
	float                                              SegmentedDistance;                                        // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x0004(0x0004) MISSED OFFSET
	unsigned char                                      UnknownData01[0x28];                                      // 0x0004(0x0028) UNKNOWN PROPERTY: SoftObjectProperty DBGame.RaySegmentedSoundEffect.AkEvent_SoftPtr
	unsigned char                                      UnknownData02[0x28];                                      // 0x0030(0x0028) UNKNOWN PROPERTY: SoftObjectProperty DBGame.RaySegmentedSoundEffect.StopAkEvent_SoftPtr
	bool                                               bLoop;                                                    // 0x0058(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	TEnumAsByte<ENetRole>                              Role;                                                     // 0x0059(0x0001) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData03[0x2];                                       // 0x005A(0x0002) MISSED OFFSET
	struct FVector                                     LocationOffset;                                           // 0x005C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	unsigned char                                      UnknownData04[0x8];                                       // 0x0068(0x0008) MISSED OFFSET
	class UAkComponent*                                AkComp;                                                   // 0x0070(0x0008) (ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData)
};

// ScriptStruct DBGame.DBZHitBoxConfig
// 0x0020
struct FDBZHitBoxConfig
{
	TArray<EPawnState>                                 States;                                                   // 0x0000(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              AboveVelocity;                                            // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExtendRadius;                                             // 0x0014(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ExtendHalfHeight;                                         // 0x0018(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct DBGame.DBZHurtFlowStr
// 0x0088
struct FDBZHurtFlowStr
{
	unsigned char                                      UnknownData00[0xC];                                       // 0x0000(0x000C) MISSED OFFSET
	int                                                AttackWeaponID;                                           // 0x000C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                VictimWeaponID;                                           // 0x0010(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData01[0x4];                                       // 0x0014(0x0004) MISSED OFFSET
	TArray<int>                                        WeaponAttachs;                                            // 0x0018(0x0010) (Edit, BlueprintVisible, ZeroConstructor)
	float                                              WorldTime;                                                // 0x0028(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                KnockOut;                                                 // 0x002C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                FatalDamage;                                              // 0x0030(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                VictimIsDying;                                            // 0x0034(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AttackerArmorLev;                                         // 0x0038(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                VictimArmorLev;                                           // 0x003C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	struct FVector                                     BulletBornPos;                                            // 0x0040(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	struct FVector                                     BulletHitPos;                                             // 0x004C(0x000C) (Edit, BlueprintVisible, IsPlainOldData)
	int                                                BulletFlyDist;                                            // 0x0058(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                HitPointType;                                             // 0x005C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AttackerInADS;                                            // 0x0060(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VictimCostHp;                                             // 0x0064(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              VictimCostArmor;                                          // 0x0068(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AttackerCurHp;                                            // 0x006C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              AttackerCurArmor;                                         // 0x0070(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AttackerWeaponLev;                                        // 0x0074(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                VictimWeaponLev;                                          // 0x0078(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                AttackerIsAI;                                             // 0x007C(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                Index;                                                    // 0x0080(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData02[0x4];                                       // 0x0084(0x0004) MISSED OFFSET
};

// ScriptStruct DBGame.AimTargetInfo
// 0x0010
struct FAimTargetInfo
{
	TWeakObjectPtr<class ASTExtraPlayerCharacter>      Target;                                                   // 0x0000(0x0008) (ZeroConstructor, IsPlainOldData)
	float                                              DistanceSquare;                                           // 0x0008(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              Angle;                                                    // 0x000C(0x0004) (ZeroConstructor, IsPlainOldData)
};

// ScriptStruct DBGame.SkillPoseMontageDataDBZ
// 0x00D0
struct FSkillPoseMontageDataDBZ
{
	unsigned char                                      UnknownData00[0x28];                                      // 0x0000(0x0028) UNKNOWN PROPERTY: SoftObjectProperty DBGame.SkillPoseMontageDataDBZ.AnimMontage_Stand
	unsigned char                                      UnknownData01[0x28];                                      // 0x0028(0x0028) UNKNOWN PROPERTY: SoftObjectProperty DBGame.SkillPoseMontageDataDBZ.AnimMontage_Crouch
	unsigned char                                      UnknownData02[0x28];                                      // 0x0050(0x0028) UNKNOWN PROPERTY: SoftObjectProperty DBGame.SkillPoseMontageDataDBZ.AnimMontage_Jump
	unsigned char                                      UnknownData03[0x28];                                      // 0x0078(0x0028) UNKNOWN PROPERTY: SoftObjectProperty DBGame.SkillPoseMontageDataDBZ.AnimMontage_Fly
	unsigned char                                      UnknownData04[0x28];                                      // 0x00A0(0x0028) UNKNOWN PROPERTY: SoftObjectProperty DBGame.SkillPoseMontageDataDBZ.AnimMontage_Max
	EAnimPlayFlag                                      AnimPlayFlag;                                             // 0x00C8(0x0001) (Edit, ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData05[0x7];                                       // 0x00C9(0x0007) MISSED OFFSET
};

// ScriptStruct DBGame.NetArrayOrderUnitDBZ
// 0x0020
struct FNetArrayOrderUnitDBZ
{
	struct FItemDefineID                               DefineID;                                                 // 0x0000(0x0018)
	int                                                Index;                                                    // 0x0018(0x0004) (ZeroConstructor, IsPlainOldData)
	unsigned char                                      UnknownData00[0x4];                                       // 0x001C(0x0004) MISSED OFFSET
};

// ScriptStruct DBGame.DBZCameraInterpSpeedCfg
// 0x0008
struct FDBZCameraInterpSpeedCfg
{
	float                                              DynamicInterpSpeed;                                       // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	float                                              ValidWorldTime;                                           // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct DBGame.LastPortalInfo
// 0x0008
struct FLastPortalInfo
{
	int                                                PortalID;                                                 // 0x0000(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
	int                                                TimeStamp;                                                // 0x0004(0x0004) (Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData)
};

// ScriptStruct DBGame.AimRangeInfo
// 0x0008
struct FAimRangeInfo
{
	float                                              MaxDistance;                                              // 0x0000(0x0004) (ZeroConstructor, IsPlainOldData)
	float                                              MaxAngle;                                                 // 0x0004(0x0004) (ZeroConstructor, IsPlainOldData)
};

}

